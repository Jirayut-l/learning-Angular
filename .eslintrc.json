{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "plugins": ["@typescript-eslint"],
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/no-empty-lifecycle-method": "warn",
        "@typescript-eslint/no-unused-vars": ["error"],
        "@typescript-eslint/consistent-type-definitions": [
          "warn",
          "interface"
        ],
        "@typescript-eslint/typedef": ["error",
          {
            "parameter": true
          }
        ],
        "@typescript-eslint/space-before-blocks": ["error"],
        "@typescript-eslint/comma-dangle": [
          "error",
          {
            "arrays": "only-multiline",
            "objects": "only-multiline",
            "imports": "only-multiline",
            "functions": "only-multiline",
            "enums": "only-multiline"
          }
        ],
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-invalid-void-type": "warn",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": true
          }
        ],
        "@typescript-eslint/no-extra-semi": ["error"]
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    }
  ]
}
